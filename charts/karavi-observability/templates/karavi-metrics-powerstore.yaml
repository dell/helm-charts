{{ if .Values.karaviMetricsPowerstore.enabled }}

apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: karavi_metrics_powerstore
    app.kubernetes.io/instance: {{ .Release.Name }}
  name: karavi-metrics-powerstore
spec:
  type: {{ .Values.karaviMetricsPowerstore.service.type }}
  ports:
  - name: karavi-metrics-powerstore
    port: 9090
    targetPort: 9090
  selector:
    app.kubernetes.io/name: karavi_metrics_powerstore
    app.kubernetes.io/instance: {{ .Release.Name }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: karavi-metrics-powerstore
  labels:
    app.kubernetes.io/name: karavi_metrics_powerstore
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: karavi_metrics_powerstore
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: karavi_metrics_powerstore
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccount: {{ .Release.Name }}-metrics-powerstore-controller
      containers:
      - name: karavi-metrics-powerstore
        image: {{ .Values.karaviMetricsPowerstore.image }}
        resources: {}
        env:
        - name: POWERSTORE_METRICS_ENDPOINT	
          value: "{{ .Values.karaviMetricsPowerstore.endpoint }}"
        - name: POWERSTORE_METRICS_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: TLS_ENABLED
          value: "true"
        volumeMounts:
        - name: karavi-metrics-powerstore-secret-volume
          mountPath: "/certs"
        - name: powerstore-config
          mountPath: /powerstore-config
        - name: tls-secret
          mountPath: /etc/ssl/certs
          readOnly: true
        - name: karavi-metrics-powerstore-configmap
          mountPath: /etc/config
      volumes:
      - name: karavi-metrics-powerstore-secret-volume
        secret:
          secretName: karavi-metrics-powerstore-tls
          items:
            - key: tls.crt
              path: localhost.crt
            - key: tls.key
              path: localhost.key
      - name: powerstore-config
        secret:
          secretName: powerstore-config
      - name: tls-secret
        secret:
          secretName: otel-collector-tls
          items:
            - key: tls.crt
              path: cert.crt
      - name: karavi-metrics-powerstore-configmap
        configMap:
          name: karavi-metrics-powerstore-configmap
      restartPolicy: Always
status: {}

{{ end }}

