# If the karavi-topology cert and key are provided, deploy a CA Issuer using the cert and key
{{- if and (.Values.karaviTopology.certificateFile) (.Values.karaviTopology.privateKeyFile) }}
{{- $certificateFileContents := .Values.karaviTopology.certificateFile }}
{{- $privateKeyFileContents := .Values.karaviTopology.privateKeyFile }}
apiVersion: v1
data:
  tls.crt: {{ $certificateFileContents | b64enc }}
  tls.key: {{ $privateKeyFileContents | b64enc }}
kind: Secret
type: kubernetes.io/tls
metadata:
  name: karavi-topology-secret
  namespace: {{ include "custom.namespace" . }}

---

apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: karavi-topology-issuer
  namespace: {{ include "custom.namespace" . }}
spec:
  ca:
    secretName: karavi-topology-secret

---
{{- end }}

# If the karavi-metrics-powerstore cert and key are provided, deploy a CA Issuer using the cert and key
{{- if and (.Values.karaviMetricsPowerstore.certificateFile) (.Values.karaviMetricsPowerstore.privateKeyFile) }}
{{- $certificateFileContents := .Values.karaviMetricsPowerstore.certificateFile }}
{{- $privateKeyFileContents := .Values.karaviMetricsPowerstore.privateKeyFile }}
apiVersion: v1
data:
  tls.crt: {{ $certificateFileContents | b64enc }}
  tls.key: {{ $privateKeyFileContents | b64enc }}
kind: Secret
type: kubernetes.io/tls
metadata:
  name: karavi-metrics-powerstore-secret
  namespace: {{ include "custom.namespace" . }}

---

apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: karavi-metrics-powerstore-issuer
  namespace: {{ include "custom.namespace" . }}
spec:
  ca:
    secretName: karavi-metrics-powerstore-secret

---
{{- end }}

# If the otelCollector cert and key are provided, deploy a CA Issuer using the cert and key
{{- if and (.Values.otelCollector.certificateFile) (.Values.otelCollector.privateKeyFile) }}
{{- $certificateFileContents := .Values.otelCollector.certificateFile }}
{{- $privateKeyFileContents := .Values.otelCollector.privateKeyFile }}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: otel-collector-secret
  namespace: {{ include "custom.namespace" . }}
data:
  tls.crt: {{ $certificateFileContents  | b64enc }}
  tls.key: {{ $privateKeyFileContents | b64enc }}

---

apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: otel-collector-issuer
  namespace: {{ include "custom.namespace" . }}
spec:
  ca:
    secretName: otel-collector-secret

---
{{- end }}

# If any set of cert+key combos are not provided, deploy a selfsigned-issuer
{{- if or (and (not .Values.karaviTopology.certificateFile) (not .Values.karaviTopology.privateKeyFile)) (and (not .Values.otelCollector.certificateFile) (not .Values.otelCollector.privateKeyFile)) (and (not .Values.karaviMetricsPowerstore.certificateFile) (not .Values.karaviMetricsPowerstore.privateKeyFile)) }}
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned-issuer
  namespace: {{ include "custom.namespace" . }}
spec:
  selfSigned: {}

---
{{- end }}

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: otel-collector
  namespace: {{ include "custom.namespace" . }}
spec:
  secretName: otel-collector-tls
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  subject:
    organizations:
    - dellemc
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  usages:
    - server auth
    - client auth
  dnsNames:
  - otel-collector
  - otel-collector.karavi.svc.kubernetes.local
  issuerRef:
  {{- if and (.Values.otelCollector.certificateFile) (.Values.otelCollector.privateKeyFile) }}
    name: otel-collector-issuer
  {{- else }}
    name: selfsigned-issuer
  {{- end }}
    kind: Issuer
    group: cert-manager.io

---

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: karavi-topology
  namespace: {{ include "custom.namespace" . }}
spec:
  secretName: karavi-topology-tls
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  subject:
    organizations:
    - dellemc
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  usages:
    - server auth
    - client auth
  dnsNames:
  - karavi-topology
  - karavi-topology.karavi.svc.kubernetes.local
  issuerRef:
  {{- if and (.Values.karaviTopology.certificateFile) (.Values.karaviTopology.privateKeyFile) }}
    name: karavi-topology-issuer
  {{- else }}
    name: selfsigned-issuer
  {{- end }}
    kind: Issuer
    group: cert-manager.io

---

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: karavi-metrics-powerstore
  namespace: {{ include "custom.namespace" . }}
spec:
  secretName: karavi-metrics-powerstore-tls
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  subject:
    organizations:
    - dellemc
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  usages:
    - server auth
    - client auth
  dnsNames:
  - karavi-metrics-powerstore
  - karavi-metrics-powerstore.karavi.svc.kubernetes.local
  issuerRef:
  {{- if and (.Values.karaviMetricsPowerstore.certificateFile) (.Values.karaviMetricsPowerstore.privateKeyFile) }}
    name: karavi-metrics-powerstore-issuer
  {{- else }}
    name: selfsigned-issuer
  {{- end }}
    kind: Issuer
    group: cert-manager.io
