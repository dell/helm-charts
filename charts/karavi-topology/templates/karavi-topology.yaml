apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: karavi_topology
    app.kubernetes.io/instance: {{ .Release.Name }}
  name: karavi-topology
spec:
  type: {{ .Values.service.type }}
  ports:
  - name: karavi-topology
    port: 8443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: karavi_topology
    app.kubernetes.io/instance: {{ .Release.Name }}

---

{{- $certificateFileContents := required "A valid certificate file is required. Refer to the Helm Chart documentation." (.Values.certificateFile) }}
{{- $privateKeyFileContents := required "A valid private key file is required. Refer to the Helm Chart documentation." (.Values.privateKeyFile) }}
apiVersion: v1
data:
  localhost.crt: {{ $certificateFileContents | b64enc }}
  localhost.key: {{ $privateKeyFileContents | b64enc }}
kind: Secret
metadata:
  name: karavi-topology-secret

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: karavi-topology
  labels:
    app.kubernetes.io/name: karavi_topology
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: karavi_topology
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: karavi_topology
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
        - name: karavi-topology-secret-volume
          secret:
            secretName: karavi-topology-secret
      serviceAccount: {{ .Release.Name }}-topology-controller
      containers:
      - name: karavi-topology
        image: {{ .Values.image }}
        resources: {}
        env:
        - name: PROVISIONER_NAMES
          value: {{ .Values.provisioner_names }}
        - name: PORT
          value: "8443"
        volumeMounts:
        - name: karavi-topology-secret-volume
          mountPath: "/certs"
      restartPolicy: Always
status: {}
