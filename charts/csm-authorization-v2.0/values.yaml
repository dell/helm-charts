---
# set to true if installing on an OpenShift Container Platform
# if enabled, the OpenShift Ingress Operator will be used
# if you have your own ingress controller, keep this false and set the appropriate annotations for the ingresses in the authorization section
openshift: false

# set to true if installing on a Kubernetes Container Platform
# if enabled, NGINX Ingress Controller will be deployed
# if you have your own ingress controller, keep this false and set the appropriate annotations for the ingresses in the authorization section
nginx:
  enabled: true

# if enabled, cert-manager will be deployed
# if cert-manager is already deployed, keep this false
cert-manager:
  enabled: true

authorization:
  # images to use in installation
  images:
    proxyService:
      image: dellemc/csm-authorization-proxy:v2.0.0-alpha
    tenantService:
      image: dellemc/csm-authorization-tenant:v2.0.0-alpha
    roleService:
      image: dellemc/csm-authorization-role:v2.0.0-alpha
    storageService:
      image: dellemc/csm-authorization-storage:v2.0.0-alpha
    authorizationController:
      image: dellemc/csm-authorization-controller:v2.0.0-alpha
    opa:
      image: openpolicyagent/opa
    opaKubeMgmt:
      image: openpolicyagent/kube-mgmt:8.5.7

  # proxy-server ingress will use this hostname
  # NOTE: additional hostnames can be configured in authorization.proxyServerIngress.hosts
  # NOTE: proxy-server ingress is configured to accept IP address connections so hostnames are not required
  hostname: csm-authorization.com

  # log level for csm-authorization
  logLevel: debug

  # number, as a string, of concurrent requests for the storage-service to make to PowerFlex
  # currently only used with dellctl to list tenant volumes
  concurrentPowerFlexRequests: "10"

  # number, as a string, of concurrent requests for the storage-service to make to PowerScale
  # currently only used with dellctl to list tenant volumes
  concurrentPowerScaleRequests: "10"

  # tracing configuration
  # this can be updated on the fly via the csm-config-params configMap
  zipkin:
    {}
    # collectoruri: http://DNS-hostname:9411/api/v2/spans
    # probability: 1

  # proxy-server ingress configuration
  proxyServerIngress:
    ingressClassName: nginx

    # additional host rules for the proxy-server ingress
    hosts:
      []
      # - [application name]-ingress-nginx-controller.[namespace].svc.cluster.local

    # additional annotations for the proxy-server ingress
    annotations: {}

  # storage capacity poll interval
  storageCapacityPollInterval: 5m

redis:
  name: redis-csm
  sentinel: sentinel
  rediscommander: rediscommander
  replicas: 5
  images:
    redis:
      image: redis:7.4.0-alpine
    commander:
      image: rediscommander/redis-commander:latest

vault:
  - identifier: vault0
    address: https://10.0.0.1:8400
    role: csm-authorization
    skipCertificateValidation: true
    # clientCertificate: base64-encoded certificate for cert/private-key pair -- add certificate here to use custom certificates
    # for self-signed certs, leave empty string
    clientCertificate:
    # clientKey: base64-encoded private key for cert/private-key pair -- add private key here to use custom certificates
    # for self-signed certs, leave empty string
    clientKey:
    # certificateAuthority: base64-encoded certificate authority for validating vault server certificate -- add certificate authority here to use custom certificates
    #  for self-signed certs, leave empty string
    certificateAuthority:
  # - identifier: vault1
  #   address: https://10.0.0.2:8400
  #   role: csm-authorization
  #   skipCertificateValidation: true
  #   clientCertificate:
  #   clientKey:
  #   certificateAuthority:
