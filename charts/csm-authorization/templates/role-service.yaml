apiVersion: v1
kind: ServiceAccount
metadata:
  name: role-service
  namespace: {{ include "custom.namespace" . }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: role-service
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "patch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: role-service
subjects:
  - kind: ServiceAccount
    name: role-service
    namespace: {{ include "custom.namespace" . }}
roleRef:
  kind: ClusterRole
  name: role-service
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: role-service
  namespace: {{ include "custom.namespace" . }}
  labels:
    app: role-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: role-service
  template:
    metadata:
      labels:
        app: role-service
    spec:
      serviceAccountName: role-service
      containers:
      - name: role-service
        image: {{ required "Must provide the role-service image." .Values.authorization.images.roleService }}
        imagePullPolicy: Always
        args:
          - "--storage-service=storage-service.{{ .Release.Namespace }}.svc.cluster.local:50051"
        ports:
        - containerPort: 50051
          name: grpc
        env:
          - name: NAMESPACE
            value: {{ include "custom.namespace" . }}
        volumeMounts:
        - name: csm-config-params
          mountPath: /etc/karavi-authorization/csm-config-params
      volumes:
      - name: csm-config-params
        configMap:
          name: csm-config-params
---
apiVersion: v1
kind: Service
metadata:
  name: role-service
  namespace: {{ include "custom.namespace" . }}
spec:
  selector:
    app: role-service
  ports:
  - port: 50051
    targetPort: 50051
    name: grpc
