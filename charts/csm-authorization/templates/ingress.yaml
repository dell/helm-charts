apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: proxy-server
  namespace: {{ include "custom.namespace" . }}
  annotations:
    {{- if eq .Values.openshift true }}
    route.openshift.io/termination: "edge"
    {{- end }}
    {{- if .Values.authorization.proxyServerIngress.annotations }}
    {{- range $key, $value := .Values.authorization.proxyServerIngress.annotations }}
    {{ $key }}: {{ tpl $value $ | quote }}
    {{- end }}
  {{- end }}
spec:
  {{- if eq .Values.nginx.enabled true }}
  ingressClassName: {{ .Values.authorization.proxyServerIngress.ingressClassName }}
  {{- end }}
  tls:
  - hosts:
      - {{ .Values.authorization.hostname }}
      {{- if .Values.authorization.proxyServerIngress.hosts  }}
      {{- range .Values.authorization.proxyServerIngress.hosts }}
      - {{ tpl . $}}
      {{- end }}
      {{- end}}
    {{- if and (.Values.authorization.certificate) (.Values.authorization.privateKey) }}
    secretName: user-provided-tls
    {{- else }}
    secretName: karavi-selfsigned-tls
    {{- end}}
  rules:
  - host: {{ .Values.authorization.hostname }}
    http:
      paths:
        - backend:
            service:
              name: proxy-server
              port:
                number: 8080
          path: /
          pathType: Prefix
  {{- if .Values.authorization.proxyServerIngress.hosts  }}
  {{- range .Values.authorization.proxyServerIngress.hosts }}
  - host: {{ tpl . $}}
    http:
      paths:
        - backend:
            service:
              name: proxy-server
              port:
                number: 8080
          path: /
          pathType: Prefix
  {{- end }}
  {{- end}}
